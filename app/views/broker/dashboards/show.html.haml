- if (current_broker.present? || current_provider.present?)
  .vacation-bar.js-organization{data: {id: current_broker.selected_organization_id, name: "Alle Organisationen"}, style: "display: none"}
    Die
    %span.js-organisation-name
      Alle Organisationen
    Organisation hat Feiertage von
    %span.js-org-start-date
      test
    bis
    %span.js-org-end-date
      test2
%div{id: 'dashboard'}
  %div.row
    %div.col-sm-3
      %div.dropdown
        %select{id: 'dropdown-btn'}
          %option{value: "0"}
            = "Alle Organisationen"
          - for organization in current_broker.all_organizations
            %option{value: "#{organization.id}", data: {'vacation-start': organization.start_vacation_date,
            'vacation-end': organization.end_vacation_date,
            'show-date': ( organization.vacation_active && (organization.end_vacation_date.present? && (organization.end_vacation_date > Date.today))).to_s}}
              = organization.name
    %div.col-sm-2.float-left.display-none
      %input.form-control.search{type: 'text', id: 'search-field', placeholder: 'Suche'}
    %div.col-sm-1.float-left.display-none
      %a.pointer{id: 'clear-btn', style: 'display: none'}
        %i.fa.fa-close.fa-3x

  %br

  %div.modal.fade{id: "jobFormModal"}
    %div.modal-dialog
      %div.modal-content
        %div.modal-header
          %button.close{"data-dismiss": "modal", type: "button"} &times;
          %h2
            = "Job Formular"
        %div.modal-body
          %p
            = "Dieses Job Formular soll ausschliesslich da zur Anwendung kommen, wo nicht mit der digitalen Version gearbeitet werden kann. Das Formular kann ausgedruckt und in den jeweiligen Institutionen aufgelegt werden. Hier geht's zum Download:"
          = link_to "Job Formular", asset_path("Job_Formular.pdf"), class: 'btn btn-success'
        %div.modal-footer
  %ul.nav.nav-pills.js-active-tab
    %li.active
      %a{'data-toggle': 'tab', href: '#todos'}
        =t('broker_dashboard.todo')
    %li
      %a{'data-toggle': 'tab', href: '#jobs', 'data-page': 1, 'data-total': @jobs.total_pages}
        =t('broker_dashboard.jobs')
    %li
      %a{'data-toggle': 'tab', href: '#providers', 'data-page': 1, 'data-total': @providers.total_pages}
        =t('broker_dashboard.providers')
    %li
      %a{'data-toggle': 'tab', href: '#seekers', 'data-page': 1, 'data-total': @seekers.total_pages}
        =t('broker_dashboard.seekers')
    %li
      %a{'data-toggle': 'tab', href: '#assignments', 'data-page': 1, 'data-total': @assignments.total_pages}
        =t('broker_dashboard.assignments')
  %div.tab-content
    %div{id: 'todos', class: 'tab-pane fade in active'}
      %ul.nav.nav-pills.margin-top-25.js-todo-tabs{style: {display: 'none'}}
        %li.active
          %a{'data-toggle': 'tab', href: '#todo_current', 'data-page': 1, 'data-total': @todos_current.total_pages}
            =t('broker_dashboard.aktuelle')
        %li.margin_left_20
          %a{'data-toggle': 'tab', href: '#todo_postponed', 'data-page': 1, 'data-total': @todos_postponed.total_pages}
            =t('broker_dashboard.verschoben')
        %span.js-postpone-msg.margin_left_20{style: 'display: none'}
          =t('broker_dashboard.todo_table.postpone_message')
        %div.row
          %div.col-sm-3.float-right
            %input.form-control.search{type: 'text', class: 'search-field', placeholder: 'Suche'}
            %i.fa.fa-2x.fa-times-circle.delete-icon.display-none
      %div{id: 'todo_current', class: 'tab-pane active js-todo-current'}
        .table-responsive
          %table.table.table-striped.sortable
            %thead
              %tr
                %th.sortable{id: 'todo_date'}= t('broker_dashboard.todo_table.date')
                %th.sortable{id: 'todo_todo'}= t('broker_dashboard.todo_table.todo')
                %th= t('broker_dashboard.todo_table.description')
                %th.pull-right= t('broker_dashboard.todo_table.postpone')
            %tbody.list{id:"todo_current_body", 'data-total': @todos_current.total_pages }
              - if @todos_current.size == 0
                %tr
                  %td{colspan: 3}= "Es sind noch keine Todo in deiner Region erfasst"
              - @todos_current.each do |todo|
                = render template: "broker/todos/_todo_current", locals: { todo: todo }
      %div{id: 'todo_postponed', class: 'tab-pane js-todo-postponed'}
        .table-responsive
          %table.table.table-striped.sortable
            %thead
              %tr
                %th.sortable{id: 'todo_date'}= t('broker_dashboard.todo_table.date')
                %th.sortable{id: 'todo_todo'}= t('broker_dashboard.todo_table.todo')
                %th= t('broker_dashboard.todo_table.description')
                %th.pull-right= t('broker_dashboard.todo_table.postpone')
                %th= t('broker_dashboard.todo_table.date')
            %tbody.list{id:"todo_postponed_body"}
              - if @todos_postponed.postponed.size == 0
                %tr
                  %td{colspan: 3}= "Es sind noch keine Todo in deiner Region erfasst"
              - @todos_postponed.postponed.each do |todo|
                = render template: 'broker/todos/_todo_postponed', locals: { todo: todo }

    %div{id: 'jobs', class: 'tab-pane fade in'}
      %div.row.margin-top-25
        %div.col-sm-2.float-left
          = link_to t('broker.jobs.index.add_new'), new_broker_job_path, class: 'btn btn-success'
        %div.col-sm-3.float-right
          %input.form-control.search{type: 'text', class: 'search-field', placeholder: 'Suche'}
          %i.fa.fa-2x.fa-times-circle.delete-icon.display-none
        %div.col-sm-1.float-right
          %a.btn.archive-btn
            = "Archiv"
        %div.col-sm-2.float-right
          %a.btn.contract-btn{href: "#", "data-toggle": "modal", "data-target": "#jobFormModal"}
            = "Job Formular"
      .table-responsive
        %table.table.table-striped.sortable
          %thead
            %tr
              %th.sortable{id: 'job_status'}= t('broker_dashboard.jobs_table.status')
              %th.sortable{id: 'job_date'}= t('broker_dashboard.jobs_table.date')
              %th.sortable{id: 'job_job'}= t('broker_dashboard.jobs_table.job')
              %th.sortable{id: 'job_provider'}= t('broker_dashboard.jobs_table.provider')
              %th= t('broker_dashboard.jobs_table.allocations')
          %tbody.list{id: 'jobs_body'}
            - if @jobs.size == 0
              %tr
                %td{ colspan: 6 }= t('broker.jobs.index.no_jobs')

            - @jobs.each do |job|
              = render job
    %div{id: 'providers', class: 'tab-pane fade in'}
      %div.row.margin-top-25
        %div.col-sm-2.float-left
          = link_to t('providers.index.add_new'), new_broker_provider_path, class: 'btn btn-success'
        %div.col-sm-3.float-right
          %input.form-control.search{type: 'text', class: 'search-field', placeholder: 'Suche'}
          %i.fa.fa-2x.fa-times-circle.delete-icon.display-none
        %div.col-sm-1.float-right
          %a.btn.archive-btn
            = "Archiv"
        %div.col-sm-2.float-right
      .table-responsive
        %table.table.table-striped.sortable
          %thead
            %tr
              %th.sortable{id: 'provider_status'}= t('broker_dashboard.providers_table.status')
              %th.sortable{id: 'provider_date'}= t('broker_dashboard.jobs_table.date')
              %th.sortable{id: 'provider_provider'}= t('broker_dashboard.providers_table.name')
              %th.sortable{id: 'provider_address'}= t('broker_dashboard.providers_table.address')
              %th.sortable{id: 'provider_plz'}= t('broker_dashboard.providers_table.plz')
              %th.sortable{id: 'provider_jobs'}= t('broker_dashboard.providers_table.jobs')
          %tbody.list{id: "providers_body"}
            - if @providers.size == 0
              %tr
                %td{ colspan: 5 }= t('providers.index.no_providers')

            - @providers.each do |provider|
              = render provider
    %div{id: 'seekers', class: 'tab-pane fade in'}
      %div.row.margin-top-25
        %div.col-sm-2.float-left
          = link_to t('seekers.index.add_new'), new_broker_seeker_path, class: 'btn btn-success'
        %div.col-sm-3.float-right
          %input.form-control.search{type: 'text', class: 'search-field', placeholder: 'Suche'}
          %i.fa.fa-2x.fa-times-circle.delete-icon.display-none
        %div.col-sm-1.float-right
          %a.btn.archive-btn
            = "Archiv"
        %div.col-sm-2.float-right
      .table-responsive
        %table.table.table-striped.sortable
          %thead
            %tr
              %th.sortable{id: 'seeker_status'}= t('broker_dashboard.seekers_table.status')
              %th.sortable{id: 'seeker_date'}= t('broker_dashboard.jobs_table.date')
              %th.sortable{id: 'seeker_seeker'}= t('broker_dashboard.seekers_table.name')
              %th.sortable{id: 'seeker_address'}= t('broker_dashboard.seekers_table.address')
              %th.sortable{id: 'seeker_plz'}= t('broker_dashboard.seekers_table.plz')
          %tbody.list{id: "seekers_body"}
            - if @seekers.size == 0
              %tr
                %td{ colspan: 4 }= t('seekers.index.no_seekers')

            - @seekers.each do |seeker|
              = render seeker
    %div{id: 'assignments', class: 'tab-pane fade in'}
      %div.row.margin-top-25
        %div.col-sm-3.float-right
          %input.form-control.search{type: 'text', class: 'search-field', placeholder: 'Suche'}
          %i.fa.fa-2x.fa-times-circle.delete-icon.display-none
        %div.col-sm-1.float-right
          %a.btn.archive-btn
            = "Archiv"
      .table-responsive
        %table.table.table-striped.sortable
          %thead
            %tr
              %th.sortable{id: 'assignment_status'}= t('broker_dashboard.assignments_table.status')
              %th.sortable{id: 'assignment_date'}= t('broker_dashboard.jobs_table.date')
              %th.sortable{id: 'assignment_seeker'}= t('broker_dashboard.assignments_table.seeker')
              %th.sortable{id: 'assignment_provider'}= t('broker_dashboard.assignments_table.provider')
              %th.sortable{id: 'assignment_payment'}= t('broker_dashboard.assignments_table.duration_payment')
              %th.sortable{id: 'assignment_feedback'}= t('broker_dashboard.assignments_table.feedback')
          %tbody.list{id: 'assignments_body'}
            - if @assignments.size == 0
              %tr
                %td{ colspan: 5 }= t('seekers.index.no_seekers')

            - @assignments.each do |assignment|
              = render assignment


%div#infinite-scrolling

%div.loader
  #loader

:javascript

   // $(".container").css("min-height", "100vh")

   var last_scrolled = Date.now()
   var organization_id
   var page_number
   var table_name
   var url
   var allow
   var archive = false

   function infiniteScroll(){
    if ($('#infinite-scrolling').size() > 0 ){
      $(window).on('scroll', function() {

        if (window.location.hash.substr(1).length > 1) {
          table_name = window.location.hash.substr(1)
        } else {
          table_name = $('.js-active-tab > .active > a').attr('href').substr(1)
        }

        if ( window.location.hash.substr(1) == "" ||  window.location.hash.substr(1) == "todos" || window.location.hash.substr(1) == "todo_current" || window.location.hash.substr(1) == "todo_postponed") {
          page_number = $('.js-todo-tabs > .active > a').data('page') + 1
          allow = $('.js-todo-tabs > .active > a').data('total') >= page_number
        } else {
          allow = $('.js-active-tab > .active > a').data('total') >= page_number
          page_number = $('.js-active-tab > .active > a').data('page') + 1
        }

        url = "/broker/dashboard?table="+table_name+"&"+table_name+"_page="+page_number+"&organization_id="+organization_id+"&archive="+archive;

        if ($(window).scrollTop() > ($(document).height() - $(window).height() - 100)  && (Date.now() - last_scrolled) > 1500 && allow) {
          last_scrolled = Date.now()
          // console.log(url)
          $(".loader").append("<div id='loader'></div>")

          $.getScript(url).success(function(){
            $("#loader").remove();
          });
        }
      });
    }
  }

  var target = window.location.hash;
  var params = window.location.search.substr(1);
  if(params === undefined || params === null || params === '') {
    params = '';
  } else {
    params = '?' + params;
  }

  target = target.replace('#', '');
  if(target === '') {
    target = 'todo';
  }
  // window.location.hash = '';

  $(document).ready(function(){
    infiniteScroll()
    $("#loader").remove()

    $('.nav-pills a[href="#' + target + '"]').tab('show');

    setHelp();

    var selectedOrganizationId = 0;
    var finishedVisible = false;

    $('.archive-btn').click(function(){
      $('.archive-btn').toggleClass('archive-btn-selected');
      archive=!archive
      dropdownSettings()
    });

    var tableSorted = [false, false, false, false, false];

    function loadSortedColumn() {
      var hash = target;
      var sortedColumnId = sessionStorage.getItem('sortedColumn' + hash);
      if(sortedColumnId != undefined) {
        sorttable.init();
        sorttable.innerSortFunction.apply(document.getElementById(sortedColumnId), []);
        if(sessionStorage.getItem('sortedReverse' + hash) === 'true') {
          sorttable.innerSortFunction.apply(document.getElementById(sortedColumnId), []);
        }
      } else {
        sorttable.init();
        if(hash === "todo" && !tableSorted[0]) {
          tableSorted[0] = true;
          sorttable.innerSortFunction.apply(document.getElementById('todo_date'), []);
          sorttable.innerSortFunction.apply(document.getElementById('todo_date'), []);
        }
        if(hash === "jobs" && !tableSorted[1]) {
          tableSorted[1] = true;
          sorttable.innerSortFunction.apply(document.getElementById('job_date'), []);
          sorttable.innerSortFunction.apply(document.getElementById('job_date'), []);
        }
        if(hash === "providers" && !tableSorted[2]) {
          tableSorted[2] = true;
          sorttable.innerSortFunction.apply(document.getElementById('provider_date'), []);
          sorttable.innerSortFunction.apply(document.getElementById('provider_date'), []);
        }
        if(hash === "seekers" && !tableSorted[3]) {
          tableSorted[3] = true;
          sorttable.innerSortFunction.apply(document.getElementById('seeker_date'), []);
          sorttable.innerSortFunction.apply(document.getElementById('seeker_date'), []);
        }
        if(hash === "assignments" && !tableSorted[4]) {
          tableSorted[4] = true;
          sorttable.innerSortFunction.apply(document.getElementById('assignment_date'), []);
          sorttable.innerSortFunction.apply(document.getElementById('assignment_date'), []);
        }
      }
    }

    $('th.sortable').click(function() {
      var hash = target;
      sessionStorage.setItem('sortedColumn' + hash, $(this).attr('id'));
      if($(this).hasClass('sorttable_sorted')) {
        sessionStorage.setItem('sortedReverse' + hash, 'true');
      } else {
        sessionStorage.setItem('sortedReverse' + hash, 'false');
      }
    });

    function checkSearchField() {
      var searchString = window.localStorage.getItem("search_filter");
      if(searchString === null || searchString === 'null') {
        searchString = "#{current_broker.filter.nil? ? '' : current_broker.filter}";
      }

      window.localStorage.setItem("search_filter", null);

      $('.search-field').val(searchString);

      if(searchString !== "") {
        $('.delete-icon').removeClass('display-none');
      }

      jobsList.search(searchString);
      providersList.search(searchString);
      seekersList.search(searchString);
      assignmentsList.search(searchString);
      todosCurrentList.search(searchString);
      todosPostponedList.search(searchString);
    }

    function loadOrganization() {
      var id = "#{current_broker.selected_organization_id}";
      organization_id = id
      selectedOrganizationId = id;
      if(id === '0') {
        $('.display-none.organization').removeClass('display-none');
      } else {
        $('.display-none.organization').removeClass('display-none');
        $('.organization').addClass('display-none');
        $('.organization-' + id).removeClass('display-none');
      }

      $('#dropdown-btn').val(id);
      // $('#dropdown-btn').text($('.organization-dropdown[data-value="' + id + '"]').text());
    }

    function dropdownSettings(){
     if (window.location.hash.substr(1).length > 1 ) {
        table_name = window.location.hash.substr(1)
      } else {
        table_name = 'todo_current'
      }

     if (window.location.hash.substr(1) == 'todos') {
      table_name = 'todo_current'
     }

      if ($('.js-active-tab > .active > a').attr("href") == "#todos") {
        $('.js-todo-tabs > .active > a').data('page', 0)
        page_number = $('.js-todo-tabs > .active > a').data('page') + 1
      } else {
        $('.js-active-tab > .active > a').data('page', 0)
        page_number = $('.js-active-tab > .active > a').data('page') + 1
      }

      $("tbody[id^=" + table_name + "_body] tr").remove()

      var id = $('#dropdown-btn').val();
      organization_id = id

      url = "/broker/dashboard?table="+table_name+"&"+table_name+"_page="+page_number+"&organization_id="+organization_id+"&archive="+archive;

      $(".loader").append("<div id='loader'></div>")
      $.getScript(url).success(function(){
            $("#loader").remove();
      });
    }

    $('.nav-pills a').on('shown.bs.tab', function (e) {
      var history_array = JSON.parse(sessionStorage.getItem('history') || '[]')
      history_array.push(window.location.href.split('#')[0] + e.target.hash );
      sessionStorage.setItem('history', JSON.stringify(history_array))
      sessionStorage.setItem('previous', window.location.href);
      if(history.pushState) {
        history.pushState(null, null, params + e.target.hash);
      }
      else {
        location.hash = e.target.hash;
      }

      dropdownSettings();
      target = e.target.hash.replace('#', '');
      loadSortedColumn();
      setHelp();
    });

    $('#dropdown-btn').on('change', dropdownSettings)

    var options = {
      valueNames: [ 'name', 'provider-name', 'place', 'status',
      'street', 'title', 'date', 'allocations', 'jobs', 'status', 'payment',
      'feedback', 'description', 'salary', 'manpower', 'duration',
      'long_description', 'short_description', 'phone',
      'mobile', 'contact_preference', 'contact_availability', 'company',
      'email', 'sex', 'additional_contacts', 'occupation', 'languages' ]
    };

    var jobsList = new List('jobs', options);
    var providersList = new List('providers', options);
    var seekersList = new List('seekers', options);
    var assignmentsList = new List('assignments', options);
    var todosCurrentList = new List('todo_current', options);
    var todosPostponedList = new List('todo_postponed', options);

    $('.search-field').on('keyup', function() {
      var searchString = $(this).val();
      if(searchString !== "") {
        $('.delete-icon').removeClass('display-none');
      } else {
        $('.delete-icon').addClass('display-none');
      }
      $('.search-field').val(searchString);

      jobsList.search(searchString);
      providersList.search(searchString);
      seekersList.search(searchString);
      assignmentsList.search(searchString);
      todosCurrentList.search(searchString);
      todosPostponedList.search(searchString);
    });

    $('.delete-icon').click(function(){
      $('.search-field').val("");
      $('.delete-icon').addClass('display-none');
      var searchString = "";
      jobsList.search(searchString);
      providersList.search(searchString);
      seekersList.search(searchString);
      assignmentsList.search(searchString);
      todosCurrentList.search(searchString);
      todosPostponedList.search(searchString);
    });

    checkSearchField();
    loadOrganization();
    loadSortedColumn();

    window.addEventListener("beforeunload", function (event) {
      // $(window).scrollTop(0);
      var searchFieldVal = $('.search-field').val();
      if(searchFieldVal === null) {
        searchFieldVal = '';
      }
      window.localStorage.setItem("search_filter", searchFieldVal);
        $.post("#{save_settings_broker_dashboard_path}", {filter: searchFieldVal, selected_organization_id: parseInt(selectedOrganizationId)}, function(response) {
      });
    });
  });
